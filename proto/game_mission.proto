import "msgdef.proto";
option optimize_for=LITE_RUNTIME;

//任务信息请求
message CGAskMissionData
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_CGAskMissionData]; 
}

message AcceptedMissionData
{
	optional int32 MissionId      = 1;   //任务id
	optional int32 RequireType    = 2;   //需求类型
	optional int32 RequirData1    = 3;   //需求参数1
	optional int32 RequirData2    = 4;   //需求参数2
	
	//挑战任务额外数据
	optional int32 Level          = 5;   //等级
	optional int32 Star           = 6;   //星级
	optional int32 LeftTime       = 7;   //剩余时间（单位为秒）
	optional int32 ParamIndex     = 8;   //任务目标参数（客户端寻路用）
}

message ChallengeMissionData
{
	optional int32 MissionId      = 1;   //任务id
	optional int32 RequireType    = 2;   //需求类型
	optional int32 RequirData1    = 3;   //需求参数1
	optional int32 RequirData2    = 4;   //需求参数2
	
	//挑战任务额外数据
	optional int32 Level          = 5;   //等级
	optional int32 Star           = 6;   //星级
	optional int32 LeftTime       = 7;   //剩余时间（单位为秒）
	optional int32 ParamIndex     = 8;   //任务目标参数（客户端寻路用）
}

//任务信息返回
message GCRetMissionData
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_GCRetMissionData];
	repeated AcceptedMissionData AcceptedList    = 2;  // 接受的任务列表
	repeated uint32 FinishedChapterList          = 3;  // 已经完成的章节
	//可接挑战任务列表
	repeated ChallengeMissionData AcceptableList = 4;
	//今日挑战剩余次数
	optional int32 LeftChallengeNum = 5;
	//免费刷新倒计时
	optional int32 RefreshCDTime = 6;
	//下一次非免费刷新消耗
	optional int32 RefreshCost = 7;
}

//可接受任务列表请求
message CGAskAcceptableMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_CGAskAcceptableMission];
}

//可接受任务列表返回
message GCRetAcceptableMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_GCRetAcceptableMission];
	repeated int32 MissionList = 2;  //可接受任务列表
}

//接受任务请求
message CGAskAcceptMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_CGAskAcceptMission];
	required int32 MissionId = 2;   //任务id
}

//接受任务返回
message GCRetAcceptMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_GCRetAcceptMission];
	required MissionError Error    = 2;  //错误码
	required int32 MissionId       = 3;  //任务id
	optional int32 PlotId          = 4;  //剧情id
	optional int32 RequireType    = 5;   //需求类型
	optional int32 RequirData1    = 6;   //需求参数1
	optional int32 RequirData2    = 7;   //需求参数2
	
	
}

//更新已接受任务信息
message GCUpdateAcceptedMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_GCUpdateAcceptedMission];
	required AcceptedMissionData MissionData = 2; //任务信息 
}

message GCRetCompleteMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_GCRetCompleteMission];
	required int32 MissionId       = 2;   //任务id
	required MissionError Error    = 3;   //错误码
	optional int32 PlotId          = 4;  //剧情id
}

//交互任务请求
message CGAskFinishMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_CGAskFinishMission];
	required int32 MissionId = 2;   //任务id
	optional bool IsQuickFinish = 3;//是否立即完成（挑战任务用）
}

//交互任务返回
message GCRetFinishMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_GCRetFinishMission];
	required int32 MissionId       = 2;   //任务id
	required MissionError Error    = 3;   //错误码
	optional int32 PlotId          = 4;  //剧情id
}

//任务条件变化通知
message CGAskChangeMissionRequirData
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_CGAskChangeMissionRequirData];
	required int32 MissionId = 2; //任务id
	required int32 RequirData1 = 3;
	required int32 RequirData2 = 4;
}

//任务条件变化返回
message GCRetChangeMissionRequirData
{
	optional PACKET_ID PacketId  = 1 [default=PACKET_GAME_MISSION_GCRetChangeMissionRequirData];
	required int32 MissionId     = 2;   //任务id
	required int32 RequirData1   = 3;
	required int32 RequirData2   = 4;
	required MissionError Error  = 5;   //错误码
}

//点击npc请求
message CGAskClickNpc
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_CGAskClickNpc]; 
	required int32 ObjId = 2; 
}


//点击npc回应
message GCRetClickNpc
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_GCRetClickNpc];
	required int32 ObjId = 2;
	repeated int32 Functions = 3;
}

//npc功能选择
message CGNpcFunctionClick
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_CGNpcFunctionClick];
	required int32 ObjId = 2;
	required int32 Index = 3;
}

//取消任务
message CGCanncelChallengeMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_CGCanncelChallengeMission];
	required int32 MissionId = 2;   //任务id
}
message GCRetCanncelChallengeMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_GCRetCanncelChallengeMission];
	required MissionError Error    = 2;   //错误码
	optional ChallengeMissionData Mission = 3;//变化的挑战任务
}

//刷新挑战任务
message CGRefreshChallengeMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_CGRefreshChallengeMission];
	required CHALLENGE_MISSION_REFRESH_TYPE  Type = 2;    //刷新类型
}
message GCRetRefreshChallengeMission
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_MISSION_GCRetRefreshChallengeMission];
	required MissionError Error    = 2;   //错误码
    repeated ChallengeMissionData MissionList = 3;//变化的挑战任务列表
    //下一次非免费刷新消耗
	optional int32 RefreshCost = 4;
}
