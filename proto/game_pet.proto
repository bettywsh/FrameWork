import "msgdef.proto";
option optimize_for=LITE_RUNTIME;

// 宠物详情.
message PetData
{
	required int32	PetID = 1;		   //宠物ID
    optional int32  PetTid = 2;        //宠物配表ID
    repeated int32  SkillList = 3;     //技能列表
	repeated CharAttr  PetAttr = 4;    //宠物培养属性
	optional int32  SkillGridNum = 5;  //技能格子数量
	optional int32  StarLevel = 6;     //星级   
	optional int32  StarExp = 7;       //星级经验
}
//阵法中宠物位置信息
message OnePetFormationPosInfo{
    required int32 PetID = 1;          //宠物ID
    required int32 PosID = 2;         //阵法位置ID	
}
//阵法
message OnePetFormation
{	
	repeated OnePetFormationPosInfo PetListInFormation = 1; //当前宠物阵容列表
	required int32 FormationID = 2;  //阵法ID
}
// 请求查询宠物列表.
message CGAskQueryPetList
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGAskQueryPetList];
} 
// 响应查询宠物列表
message GCRetAskQueryPetList
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCRetAskQueryPetList];
	repeated 	PetData  PetList = 2; //宠物列表
	optional	int32    CurrentPetID = 3;//当前出战宠物ID -1表示暂无宠物出战
	repeated	SkillData PassiveSkillList = 4;//玩家已激活的被动宠物技能列表
	optional    int32    ActiveFormaitonID = 5;//已激活阵法ID
	repeated	OnePetFormation    PetFormationList = 6;//阵法列表
}

// 请求激活宠物
message CGAskActivePet
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGAskActivePet];
	required int32 PetID = 2;
}
 
//响应激活宠物
message GCRetAskActivePet
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCRetAskActivePet];
	required int32 Result = 2;

}

// 请求宠物出战.
message CGAskCallPet
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGAskCallPet];
	required int32 PetID = 2;
}
 
//响应宠物出战
message GCRetAskCallPet
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCRetAskCallPet];
    required int32 Result = 2;
	optional int32 CurrentPetID = 3;//当前出战宠物ID Result为0才有效 
}

// 请求宠物收回.
message CGAskSleepPet
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGAskSleepPet];
	required int32 PetID = 2;
}
 
// 响应宠物收回
message GCRetAskSleepPet
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCRetAskSleepPet];
    required int32 Result = 2;
}

//技能库被动技能激活
message CGActiveSkillInPassiveList
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGActiveSkillInPassiveList];
    required int32	SkillID = 2;	// 技能ID
}
message GCActiveSkillInPassiveList
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCActiveSkillInPassiveList];
    required OPERATE_RESULT Result = 2;
}
//技能库被动技能升级
message CGUpgradeSkillInPassiveList
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGUpgradeSkillInPassiveList];
    required int32	SkillID = 2;	// 技能ID
}
message GCUpgradeSkillInPassiveList
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCUpgradeSkillInPassiveList];
    required OPERATE_RESULT Result = 2;
	optional int32 ResultLevel = 3; //升级后星级
	optional int32 ResultExp = 4;   //升级后当前经验
}
//被动技能装备或卸载
message CGOperatePassiveSkill
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGOperatePassiveSkill];
	required int32 PetID = 2;
    required int32	SkillID = 3;	// 技能ID
	required PET_SKILL_OP_TYPE OpType = 4; //装备或卸下操作
}
message GCOperatePassiveSkill
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCOperatePassiveSkill];
    required OPERATE_RESULT Result = 2;
}
//宠物升星
message CGStarLevelUpPet
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGStarLevelUpPet];
	required int32 PetID = 2;
}
message GCStarLevelUpPet
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCStarLevelUpPet];
	required OPERATE_RESULT Result = 2;
	optional int32 ResultStarLevel = 3; //升级后星级
	optional int32 ResultStarExp = 4;   //升级后当前经验
	optional int32 ResultSkillGridNum = 5;//升级后当前拥有技能格子数量
}
//宠物属性培养
message CGTrainningPetAttr
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGTrainningPetAttr];
	required int32 PetID = 2;
}
message GCTrainningPetAttr
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCTrainningPetAttr];
	required OPERATE_RESULT Result = 2;
	repeated PetTrainResult ResultAttr = 3; //本次培养属性变化结果
}

//阵法激活
message CGActivePetBattleFormation
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGActivePetBattleFormation];
	required int32 FormationID = 2;//阵法ID
}
message GCRetActivePetBattleFormation
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCRetActivePetBattleFormation];
	required OPERATE_RESULT Result = 2;
}
//宠物阵容操作
message CGOperatePetToBattleFormation
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_CGOperatePetToBattleFormation];
	required OperatePetFormationType type = 2;//阵法操作
	required int32 FormationID = 3;//阵法ID
	optional int32 OldPetID = 4;
	optional int32 NewPetID = 5;
	required int32 PosId = 6;    //阵法位置ID
}
message GCRetOperatePetToBattleFormation
{
	optional PACKET_ID PacketId = 1 [default=PACKET_GAME_PET_GCRetOperatePetToBattleFormation];
	required OPERATE_RESULT Result = 2;
}