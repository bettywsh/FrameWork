import "msgdef.proto";
option optimize_for=LITE_RUNTIME;


// world与login之间的登陆消息.

// 选定角色请求登陆.
message LWAskCharLogin
{
	optional PACKET_ID PacketId = 1 [default=PACKET_WL_LOGIN_LWAskCharLogin];
	// 用户ID.
	required string UserId = 2;
	// PlayerID.
	required int32 PlayerId = 3;
	// guid.
	required sfixed64 CharGuid = 4;
	// 请求状态.
	required ASK_LOGINSTATUS AskStatus = 5;
	// 验证key.
	required int32 Key = 6;
	// Mac
	required string Mac = 7;
	// FULLUSERDATA
	optional bytes FullUserData = 8;
	// Token
	required string Token = 9;
}

// 角色请求登陆返回
message WLRetCharLogin
{
	optional PACKET_ID PacketId = 1 [default=PACKET_WL_LOGIN_WLRetCharLogin];
	// 请求状态.
	required ASK_LOGINSTATUS AskStatus = 2;
	// 返回结果.
	required ASKCHARLOGIN_RESULT Result = 3;
	// 用户ID.
	required string UserId  = 4;
	// PlayerID.
	required int32 PlayerId = 5;
	// HoldStatus.
	required bool HoldStatus = 6;
	// guid.
	required sfixed64 CharGuid = 7;
	// ServerID.
	optional int32 ServerId = 8;
}

enum ASKACCOUNT_STATUS_TYPE
{
	AAST_LOGIN			=	0;
	AAST_LOGIN_FORCE	=	1;
	AAST_BACKTOCHARLIST	=	2;
}

// 请求账号登入状态信息
message LWAskAccountStatus
{
	optional PACKET_ID PacketId = 1[default=PACKET_WL_LOGIN_LWAskAccountStatus];
	// userid
	required string UserId = 2;
	// PlayerID.
	required int32 PlayerId = 3;
	// AskType
	required ASKACCOUNT_STATUS_TYPE Type = 4;
	// guid
	optional sfixed64 CharGuid	= 5;
	// token
	optional string  Token 	  = 6; 
	// Mac
	optional string  Mac	  = 7;
}

// 账号状态
enum ACCOUNT_STATUS
{
	AS_ERROR		= -1;
	AS_OK			= 0;
	AS_GM_LIMIT		= 1;
	AS_SAME_LOGIN	= 2;
}

// 返回账号登入状态信息
message WLAccountStatusResponse
{
	optional PACKET_ID PacketId = 1[default=PACKET_WL_LOGIN_WLAccountStatusResponse];
	// userid
	required string UserId = 2;
	// PlayerID.
	required int32 PlayerId = 3;
	// AskType
	required ASKACCOUNT_STATUS_TYPE Type = 4;
	// accountstatus
	required ACCOUNT_STATUS status = 5;
}