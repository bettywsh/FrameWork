local UIBase = {}
UIBase.view = {}
UIBase.gameObject = nil
UIBase.args = nil
UIBase.name = nil

function UIBase:Open(transform, args)
	self.args = args
    self.gameObject = transform.gameObject
	self.name = self.gameObject.name
    -- self:InitBinder()
	self.view = UIMgr:AutoBind(transform)
    Function:RegisterLuaMessage(self)
    Function:RegisterNetCmd(self)
    Function:RegisterButtonOnClick(self)
end

function UIBase:LoadSpriteAsync(spriteName, cb)
    return ResManager.Instance:LoadSpriteAsync(spriteName, cb)
end

function UIBase:LoadAtlasSprite(atlasName, spriteName)
    return self.view.transform:GetComponent("LuaClass"):GetSprite(atlasName, spriteName);
end

function UIBase:SetClickCallback(go, me, callback)
    go.onClick:AddListener(function(go)
        callback(me)
    end)
end

function UIBase:SetClickUpCallback(go, callback)
    local listener = EventTriggerListener.Get(go)
    listener.onUp = callback
end

function UIBase:SetClickDownCallback(go, callback)
    local listener = EventTriggerListener.Get(go)
    listener.onDown = callback
end

function UIBase:SetClickEnterCallback(go, callback)
    local listener = EventTriggerListener.Get(go)
    listener.onEnter = callback
end

function UIBase:SetClickExitCallback(go, callback)
    local listener = EventTriggerListener.Get(go)
    listener.onExit = callback
end

function UIBase:SetBeginDragCallback(go, callback)
    local listener = EventTriggerListener.Get(go)
    listener.onBeginDrag = callback
end

function UIBase:SetDragCallback(go, callback)
    local listener = EventTriggerListener.Get(go)
    listener.onDrag = callback
end

function UIBase:SetEndDragCallback(go, callback)
    local listener = EventTriggerListener.Get(go)
    listener.onEndDrag = callback
end

function UIBase:Close()
	Function:UnRegisterNetCmd(self)
    Function:UnRegisterLuaMessage(self)
    Function:UnRequire("UI/"..self.name)
    CSDefine.Object.DestroyImmediate(self.gameObject)
end

return UIBase
