local LoadingPanel = class("LoadingPanel", UIBase)
LoadingPanel.sceneFinish = false
LoadingPanel.loadingFinish = false

function LoadingPanel:OnOpen()
	self.loadingFinish = false
	self.sceneFinish = false
	self.view.progressValue.fillAmount = 0
	self.view.txt_Value.text = string.format(TextMgr:GetText("Loading_Value"), 0)
	self.view.loading:DOLocalRotate(Vector3(0, 0, -360), 1, DG.Tweening.RotateMode.FastBeyond360):SetLoops(-1, DG.Tweening.LoopType.Restart):SetEase(DG.Tweening.Ease.Linear)
	self.view.tips.text = TextMgr:GetText("Tips_Title")..TextMgr:GetText("Tips_"..(math.random(1, 5)))
	self.view.progressValue:DOFillAmount(1, 1):OnUpdate(function()
		self.view.txt_Value.text = string.format(TextMgr:GetText("Loading_Value"), math.ceil(tonumber(self.view.progressValue.fillAmount) * 100))
	end):OnComplete(
	function()
		self:LoadingFinish()
	end)
	
end

-- function LoadingPanel:SetText()
-- 	self.view.Text.text = ConfigMgr.GetChineseText("Common_Loading");--当前正在加载中
-- end

function LoadingPanel:LoadingFinish()
	self.loadingFinish = true
	print("LoadingFinish"..tostring(self.sceneFinish)..","..tostring(self.loadingFinish))
	if self.sceneFinish and self.loadingFinish then
		UIMgr:CloseSelf(self)
	end
end

function LoadingPanel:SceneFinish()
	self.sceneFinish = true
	print("SceneFinish")
	if self.sceneFinish and self.loadingFinish then
		UIMgr:CloseSelf(self)
	end
end

function LoadingPanel:OnClose()
	
end


return LoadingPanel
