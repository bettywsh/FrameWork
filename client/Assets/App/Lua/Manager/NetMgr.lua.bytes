local NetMgr = {}

NetMgr.PB = require "pb"
NetMgr.protoc = require "3rd/lua-protobuf/protoc"
NetMgr._NetCmdNameRegistry = {}
NetMgr._sendPingTime = 0
NetMgr.hasConnected = false
NetMgr.NetLog = false

NetMgr.IP = ""
NetMgr.Positon = ""
NetMgr.disConnect = false

NetMgr.pingnum = 0

-- 初始化PB
function NetMgr:Init()
    self:RegisterProtoFile()
    self:InitHandleMessage()
    self:RegisterCSharpMessage()
end

function NetMgr:RegisterCSharpMessage()
    -- 服务器连接失去连接
    MessageMgr:RegisterCSharpMessage(CSDefine.MessageConst.MsgLostConnect, function(data)
        if self.hasSendPing then
            self.disConnect = true
        end
    end)
    -- 服务器连接连接失败
    MessageMgr:RegisterCSharpMessage(CSDefine.MessageConst.MsgDisconnected, function(data)
        if self.hasSendPing then
            self.disConnect = true
        end
    end)
end

-- 断线回到登录界面
function NetMgr:ResetLogin()
    self.disConnect = false
    self.hasSendPing = false
    PropModel.isMatch=0
    SoundMgr:StopBacksound()
    SoundMgr:StopAllEffectSound()
    ResetData();
    UIManager.Instance:HideAllBaseUI()
    SceneMgr:LoadScene("Main", true, function()
        LoginModel.AutoLoginSuccess = true
        LoginModel.LoginInfo.Sign = ""
        UIMgr:Open(ModuleName, "LoginPanel")
    end)
end

-- ping值协议返回
function NetMgr:OnNetCmd_GCRetPing(msg)
    self.pingnum = 0
end

function NetMgr:SendPing()
    self.hasSendPing = true
    self.pingnum = 0
    -- 发送ping包
    MessageMgr:RegisterNetMessage("GCRetPing", function(scmd)
        self.pingnum = 0
    end)
end

-- 注册网络协议的文件
function NetMgr:RegisterProtoFile()
    local protodefs = require("3rd/lua-protobuf/ProtoFlies")
    for k, v in ipairs(protodefs) do
        ResMgr:GloabLoadAssetAsync("Protobuf/"..v .. ".pc.bytes", typeof(CSDefine.TextAsset), function(obj)
            local file, x = self.PB.load(obj.bytes)
            if not file then
                print("加载失败".. obj.bytes .. x)
            end
        end)
    end
end

-- new 表示为一个新的连接 此处区分了login服务器和game服务器
function NetMgr:SendCmd(cmdName, cmd)
    if self.NetLog and cmdName ~= "CGAskPing" then
        Function:ShowTable(cmd, "==>>Send:" .. cmdName, "lightblue")
    end
    local cmdFullName = GameDefine.ProtobufPackage..cmdName
    local bytes = self.PB.encode(cmdFullName, cmd)
    local data2 = assert(self.PB.decode(cmdFullName, bytes))
    Function:Log(cmdFullName..require"3rd/lua-protobuf/serpent".block(data2))
    local cmdid = self.PB.enum(GameDefine.ProtobufPackage.."CSMessageEnum", cmdName)
    CSDefine.NetworkManager:Send(tonumber(cmdid), bytes)
end

function NetMgr:GetPbIDFromCmdName(cmdName)
    -- return self._NetCmdNameRegistry[cmdName]
    local cmdName = self.PB.enum(GameDefine.ProtobufPackage.."SCMessageEnum", cmdName)
    return cmdName
end

function NetMgr:ConnectTo(ip, port)
    CSDefine.NetworkManager:Connect(ip..":"..port)
end

function NetMgr:DisConnect()
    CSDefine.NetworkManager:DisConnect()
end

function NetMgr:Update()
    -- 每段时间发一次ping值协议
    if self.hasSendPing and Time.time - self._sendPingTime > 5 then
        self._sendPingTime = Time.time
        self:SendCmd("CGAskPing", {})
        self.pingnum = self.pingnum + 1
    end
    if self.hasSendPing and self.pingnum >= 2 then
        self.pingnum = 0
        self:DisConnect()
        self.disConnect = true
    end
    if self.disConnect then
        self.disConnect = false;
        -- 如果是被顶号不提示重连
        if not GameDefine.NoConnect and GameDefine.isLoginBroken then
            -- LoginModel:Init(function()
                LoginBroken:BrokenLogin()
            -- end)
        end
        -- self:ResetLogin();
    end

    -- if UnityEngine.Input.GetKeyDown(UnityEngine.KeyCode.A) and GameDefine.ServerAddress.Type == 1 then
    --     local baseCanvas = UIManager.Instance.canvasRoot.transform:Find("UICanvas/BaseCanvas")
    --     for i = 0, baseCanvas.childCount - 1 do
    --         local tf = baseCanvas:GetChild(i)
    --         local metaTable = baseCanvas:GetChild(i):GetComponent("LuaBehaviour").metaTable
    --         if metaTable.Start ~= nil then
    --             metaTable:Start()
    --         end
    --     end
    -- end
end


function NetMgr:InitHandleMessage()
    MessageMgr:RegisterCSharpMessage(CSDefine.MessageConst.MsgNetData, function(datas)
        local packetId = datas[0]
        if datas[1] == nil then
            Function:Log("on socket lua:" .. packetId)
        end
        local data = datas[1]
        -- local data = cmdData:ReadBuffer()
        if not data then
            Function:Error("NULL network data")
        else
            local cmdName = self.PB.enum(GameDefine.ProtobufPackage.."SCMessageEnum", packetId)
            if cmdName then
                local cmd = self.PB.decode(GameDefine.ProtobufPackage..cmdName, data)
                Function:Log(cmdName..require"3rd/lua-protobuf/serpent".block(cmd))
                if not cmd then
                    Function:Warring("protobuf decode error:" .. cmdName .. "." .. errstr)
                else
                    MessageMgr:NetMessageNotify(packetId, cmd)
                end
            else
                Function:Error("no packetId defined:" + packetId)
            end
        end
    end)
end

return NetMgr
