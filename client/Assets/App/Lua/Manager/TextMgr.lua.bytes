local TextMgr = {}
TextMgr.LanguageTable = require("Config/Language")
TextMgr.language = ""
TextMgr.textDefine = {}

-- 初始化语言
function TextMgr:Init()
    local startLanguage = CSDefine.PlayerPrefs.GetString("language", "")
    if startLanguage == "" then
        startLanguage = "Chinese"
        TextMgr.language = startLanguage
        self:ChangeLanguage(startLanguage)
    else
        TextMgr.language = startLanguage
    end
    -- UnRequire("Config.".. self.LanguageTable[self.language].LanguageTable)
end

-- 更改语言
function TextMgr:ChangeLanguage(LanguageName)
    if LanguageName ~= self.language then
        CSDefine.PlayerPrefs.SetString("language", LanguageName)
        self.language = LanguageName
        return true
    else
        return false
    end
end

function TextMgr:GetAllText()
    return require("Config/" .. self.LanguageTable[self.language].LanguageTable)
end

-- 读取模块文本
function TextMgr:GetText(key)
    self.textDefine = require("Config/" .. self.LanguageTable[self.language].LanguageTable)
    if self.textDefine[key] == nil then
        return "Not Found" .. key
    else
        return self.textDefine[key].Value
    end
end

function TextMgr:formatnumberthousands(num)
    local function checknumber(value)
            return tonumber(value) or 0
    end
    local formatted = tostring(checknumber(num))
    local k
    while true do
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        print(formatted,k)
        if k == 0 then
                break end
        end
    return formatted
end

-- function TextMgr:ShorthandCoins(coins)
--     local coin = 0
--     local type = ""
--     local coinsSave = coins or 0;
--     if coinsSave > 1000000000000 then
--         coin = coinsSave / 1000000000000
--         type = "T"
--     elseif coinsSave > 1000000000 then
--         coin = coinsSave / 1000000000
--         type = "G"
--     elseif coinsSave > 1000000 then
--         coin = coinsSave / 1000000
--         type = "M"
--     elseif coinsSave > 1000 then
--         coin = coinsSave / 1000
--         type = "K"
--     else
--         coin = coinsSave
--     end
--     if type == "" then
--         return tostring(coin)
--     else
--         return string.format("%.2f" .. type, coin)
--     end
-- end

return TextMgr
